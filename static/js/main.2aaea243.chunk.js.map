{"version":3,"sources":["db.js","sortableTable.js","units.js","jlc.js","componentTable.js","history.js","app.js","serviceWorker.js","index.js"],"names":["persist","a","navigator","storage","window","indexedDB","alert","db","Dexie","extractCategoryKey","category","version","stores","settings","components","categories","report","fetchJson","index","progress","updateProgress","name","status","put","key","value","created","updateCategories","cName","sName","attr","addCategory","updateStock","deleteCategory","newCategory","_","updateAvailable","onUpdate","path","errorIntro","fetch","response","ok","Error","statusText","contentType","headers","get","indexOf","json","fetchText","text","categoryIndex","onNew","onUpdateExisting","onUpdateStock","onExcessive","updates","usedCategories","Set","categoryName","subcategories","subcategoryName","attributes","action","where","first","undefined","add","push","Object","entries","Promise","all","toArray","map","has","restoreObject","schema","source","reduce","obj","k","i","addComponents","cObjects","src","bulkPut","transaction","c","stock","id","modify","component","lcsc","hash","update","delete","SortableHeaderField","props","sortIcons","className","sortable","icon","sortDirection","onClick","header","onDelete","e","stopPropagation","SortableTable","handleHeaderClick","state","sortBy","setState","produce","draft","getComparator","columnName","comparator","getPropAsString","propName","rowClassName","evenRowClassName","oddRowClassName","showMore","visibleItems","data","length","prevProps","this","t0","performance","now","sortedData","pureComparator","b","sort","t1","console","log","slice","x","row","keyFun","expandableContent","cell","displayGetter","onEnter","React","Component","ExpandableTableRow","handleClick","preventDefault","expanded","colSpan","children","quantityComparator","quantityName","includes","numericComparator","String","localeCompare","infixMagnitudeFormatter","letter","order","integralPart","Math","floor","fractionalPartStr","toFixed","replace","siFormatter","unit","prefix","prefixes","magnitude","idx","abs","siFormatterImpl","resistanceFormatter","resistance","getQuantityPrice","quantity","pricelist","pricepoint","qFrom","qTo","price","AttritionInfo","then","responseJson","q","max","parseInt","lossNumber","leastNumber","round","Number","EPSILON","getValue","getQuantity","attributeComparator","y","valueType","primary","values","sortImagesSrcBySize","images","imgCollection","sizeStr","imageDimension","split","size","fullTextComponentsFilter","words","mfr","description","toLocaleLowerCase","componentText","word","formatAttribute","attribute","varNames","keys","regex","RegExp","join","format","match","formatter","voltage","current","power","capacitance","frequency","inductance","count","quantityFormatter","valueFootprint","JSON","stringify","filterByChunks","array","predicate","chunkSize","result","resolve","fail","aborted","filter","chunk","setTimeout","r","f","Spinbox","xmlns","fill","viewBox","style","cx","cy","stroke","strokeWidth","d","InlineSpinbox","enableMapSet","ZoomableLazyImage","assignRef","element","container","handleMouseEnter","handleMouseLeave","hover","onMouseEnter","onMouseLeave","height","width","zoomWidth","zoomHeight","zoomSrc","ComponentOverview","handleStartComponentsChange","newVersion","componentsVersion","handleComponentsChange","expectedComponentsVersion","properties","collectProperties","propertyDic","activeProperties","property","handleActivePropertiesChange","handleIncludeInTable","handlePropertyRequired","handleQuantityChange","handleStockRequired","stockRequired","prepareCategories","sourceCategories","sortedCategories","subCats","val","propertiesList","requiredProperties","filterComponents","onChange","onAnnounceChange","onTableInclude","tableIncluded","Array","from","tableIncludedProperties","onPropertyRequired","onStockRequired","href","datasheet","target","rel","discontinued","color","title","url","imgSrc","zoomImgSrc","sources","manufacturer","unitPrice","sumPrice","filteredComponents","activeClass","to","spy","smooth","duration","headerClassName","item","ExpandedComponent","rawCategories","componentQuantity","findCategoryById","subcategory","comp","alt","maxWidth","pName","pricePoint","CategoryFilter","collectActiveCategories","concat","notifyParent","handleCategoryChange","n","allCategories","selectAll","handleSelectAll","handleSelectNone","handleFulltextChange","searchString","clearTimeout","searchTimeout","handleClear","abort","query","anyOf","filteredPromise","fAbort","catch","filtered","type","options","MultiSelectBox","handleAllClick","option","handleNoneClick","handleSelectChange","selectedOptions","selectStyle","minHeight","multiple","SingleSelectBox","PropertySelector","handleSortChange","collectValueTypes","flatMap","valueOptions","checked","required","PropertySelect","QuantitySelect","min","History","HistoryItem","info","renderImage","renderLoaded","renderUnknown","DayTable","label","HistoryTable","process","day","Date","DataTransfer","compare","lenght","getDate","getMonth","getFullYear","Header","Footer","library","fas","far","fab","FirstTimeNote","componentCount","NewComponentFormatWarning","newComponentFormat","limit","UpdateBar","handleUpdateClick","onTriggerUpdate","checkStatus","checkForComponentLibraryUpdate","timerID","setInterval","clearInterval","lastUpdate","Updater","updateComponentLibrary","onFinish","items","task","listItems","Container","Navbar","exact","activeClassName","NoMatch","App","onUpdateFinish","triggerUpdate","updating","basename","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2aaea243.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nif (!window.indexedDB) {\n    alert(\"This page requires IndexedDB to work.\\n\" +\n            \"Your browser does not support it. Please upgrade your browser.\");\n}\n\nasync function persist() {\nreturn await navigator.storage && navigator.storage.persist &&\n    navigator.storage.persist();\n}\n\nexport const db = new Dexie('jlcparts');\ndb.version(1).stores({\n    settings: 'key',\n    components: 'lcsc, category, mfr, *indexWords',\n    categories: 'id++,[category+subcategory], subcategory, category'\n});\n\nfunction extractCategoryKey(category) {\n    return category[\"id\"];\n}\n\nconst SOURCE_PATH = \"data\";\n\n// Updates the whole component library, takes a callback for reporting progress:\n// the progress is given as list of tuples (task, [statusMessage, finished])\nexport async function updateComponentLibrary(report) {\n    await persist();\n    report({\"Component index\": [\"fetching\", false]})\n    let index = await fetchJson(`${SOURCE_PATH}/index.json`,\n        \"Cannot fetch categories index: \");\n    let progress = {}\n    let updateProgress = (name, status) => {\n        progress[name] = status;\n        report(progress);\n    }\n    db.settings.put({key: \"lastDbUpdate\", value: index.created})\n    await updateCategories(index.categories,\n        // onNew\n        async (cName, sName, attr) => {\n            let name = cName + \": \" + sName;\n            updateProgress(name, [\"Adding components 1/2\", false]);\n            let category = await addCategory(cName, sName, attr);\n            updateProgress(name, [\"Updating stock 2/2\", false]);\n            await updateStock(category);\n            updateProgress(name, [\"Added\", true]);\n            return category;\n        },\n        // onUpdateExisting\n        async (category, attr) => {\n            let cName = category[\"category\"];\n            let sName = category[\"subcategory\"];\n            let name = cName + \": \" + sName;\n            updateProgress(name, [\"Updating components 1/2\", false]);\n            await deleteCategory(category);\n            let newCategory = await addCategory(cName, sName, attr);\n            updateProgress(name, [\"Updating stock 2/2\", false]);\n            await updateStock(newCategory);\n            updateProgress(name, [\"Update finished\", true]);\n            return newCategory;\n        },\n        // onUpdateStock\n        async (category, _) => {\n            let cName = category[\"category\"];\n            let sName = category[\"subcategory\"];\n            let name = cName + \": \" + sName;\n            updateProgress(name, [\"Updating stock 1/1\", false]);\n            await updateStock(category);\n            updateProgress(name, [\"Stock updated\", true]);\n            return category;\n        },\n        // onExcessive\n        async (category) => {\n            let cName = category[\"category\"];\n            let sName = category[\"subcategory\"];\n            let name = cName + \": \" + sName;\n            updateProgress(name, [\"Removing category\", false]);\n            await deleteCategory(category);\n            updateProgress(name, [\"Removed\", true]);\n        }\n    );\n}\n\n// Check if the component library can be updated\nexport async function checkForComponentLibraryUpdate() {\n    let index = await fetchJson(`${SOURCE_PATH}/index.json`,\n        \"Cannot fetch categories index: \");\n    let updateAvailable = false;\n    let onUpdate = (category) => { updateAvailable = true; return category; }\n    await updateCategories(index.categories,\n        // onNew\n        onUpdate,\n        // onUpdateExisting\n        onUpdate,\n        // onUpdateStock\n        onUpdate,\n        // onExcessive\n        onUpdate\n    );\n    return updateAvailable;\n}\n\n// Fetch a JSON. If error occures,\nexport async function fetchJson(path, errorIntro) {\n    let response = await fetch(path);\n    if (!response.ok) {\n        throw Error(errorIntro + response.statusText);\n    }\n    let contentType = response.headers.get('Content-Type');\n    if (!contentType || contentType.indexOf(\"application/json\") === -1) {\n        throw Error(errorIntro + `Response is not JSON, but ${contentType}: ` + path);\n    }\n    return await response.json();\n}\n\nasync function fetchText(path, errorIntro) {\n    let response = await fetch(path);\n    if (!response.ok) {\n        throw Error(errorIntro + response.statusText);\n    }\n    return await response.text();\n}\n\n// Update categories. Fetched categoryIndex and 3 callback are supplied to\n// perform the update.\nasync function updateCategories(categoryIndex, onNew, onUpdateExisting, onUpdateStock, onExcessive) {\n    let updates = [];\n    let usedCategories = new Set();\n    for (const [categoryName, subcategories] of Object.entries(categoryIndex)) {\n        for ( const [subcategoryName, attributes] of Object.entries(subcategories)) {\n            let action = db.categories\n                .where({\"category\": categoryName, \"subcategory\": subcategoryName})\n                .first(async category => {\n                    if (category === undefined) {\n                        category = await onNew(categoryName, subcategoryName, attributes);\n                    } else if (attributes[\"datahash\"] !== category[\"datahash\"] ||\n                               attributes[\"sourcename\"] !== category[\"sourcename\"])\n                    {\n                        category = await onUpdateExisting(category, attributes);\n                    } else if (attributes[\"stockhash\"] !== category[\"stockhash\"]) {\n                        category = await onUpdateStock(category);\n                    }\n\n                    if (category) {\n                        usedCategories.add(extractCategoryKey(category));\n                    }\n                });\n            updates.push(action);\n        }\n    }\n    await Promise.all(updates);\n    const all = await db.categories.toArray();\n    await Promise.all(all.map(async category => {\n        if (usedCategories.has(extractCategoryKey(category))) {\n            return;\n        }\n        onExcessive(category);\n    }));\n}\n\n// Takes an array containing schema and an array of values and turns them into\n// dictionary\nfunction restoreObject(schema, source) {\n    return schema.reduce((obj, k, i) => ({...obj, [k]: source[i] }), {})\n}\n\n// Takes a JSON fetched from server and adds them to the database for the\n// corresponding category\nasync function addComponents(category, components) {\n    let schema = components[\"schema\"];\n    let cObjects = components[\"components\"].map(src => {\n        let obj = restoreObject(schema, src);\n        obj[\"category\"] = extractCategoryKey(category);\n        return obj;\n    });\n    await db.components.bulkPut(cObjects);\n}\n\n// Add a single category and fetch all of its components\nasync function addCategory(categoryName, subcategoryName, attributes) {\n    let components = await fetchJson(`${SOURCE_PATH}/${attributes[\"sourcename\"]}.json`,\n        `Cannot fetch components for category ${categoryName}: ${subcategoryName}: `);\n    let c = await db.transaction(\"rw\", db.categories, db.components, async () => {\n        let key = await db.categories.put({\n            \"category\": categoryName,\n            \"subcategory\": subcategoryName,\n            \"sourcename\": attributes[\"sourcename\"],\n            \"datahash\": attributes[\"datahash\"],\n            \"stockhash\": attributes[\"stockhash\"]\n        });\n        let category = await db.categories.get(key);\n        await addComponents(category, components);\n        return category;\n    });\n    return c;\n}\n\n// Fetch and update stock\nasync function updateStock(category) {\n    let stock = await fetchJson(`${SOURCE_PATH}/${category[\"sourcename\"]}.stock.json`,\n        `Cannot fetch stock for category ${category[\"category\"]}: ${category[\"subcategory\"]}: `);\n    await db.components.where({category: category.id}).modify(component =>{\n        component.stock = stock[component.lcsc];\n    });\n    // await db.transaction(\"rw\", db.components, async () => {\n    //     let actions = [];\n    //     for (const [component, stockVal] of Object.entries(stock)) {\n    //         actions.push(db.components.update(component, {\"stock\": stockVal }));\n    //     }\n    //     await Promise.all(actions);\n    // });\n    let hash = await fetchText(`${SOURCE_PATH}/${category[\"sourcename\"]}.stock.json.sha256`,\n        `Cannot fetch stock hash for category ${category[\"category\"]}: ${category[\"subcategory\"]}: `);\n    await db.categories.update(extractCategoryKey(category), {\"stockhash\": hash});\n}\n\n// Delete given category and all of its components\nasync function deleteCategory(category) {\n    await db.transaction(\"rw\", db.components, db.categories, async () => {\n        await db.components.where({\"category\": extractCategoryKey(category)}).delete();\n        await db.categories.delete(extractCategoryKey(category));\n    });\n}\n\n\n// See https://stackoverflow.com/questions/64114482/aborting-dexie-js-query\nexport function cancellableDexieQuery(includedTables, querierFunction) {\n    let tx = null;\n    let cancelled = false;\n    const promise = db.transaction('r', includedTables, () => {\n        if (cancelled)\n            throw new Dexie.AbortError('Query was cancelled');\n        tx = Dexie.currentTransaction;\n        return querierFunction();\n    });\n    return [\n        promise,\n        () => {\n            cancelled = true; // In case transaction hasn't been started yet.\n            if (tx)\n                tx.abort(); // If started, abort it.\n            tx = null; // Avoid calling abort twice.\n        }\n    ];\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport produce from 'immer';\nimport { Waypoint } from 'react-waypoint';\n\n\nfunction SortableHeaderField(props) {\n    var sortIcons;\n    var className = \"sticky top-0 bg-blue-500 mx-1 p-2 border-r-2 rounded\"\n    if (props.sortable) {\n        className += \" cursor-pointer\"\n        let icon = \"sort\";\n        if (props.sortDirection === \"asc\")\n            icon = \"sort-amount-up\";\n        if (props.sortDirection === \"desc\")\n            icon = \"sort-amount-down\";\n        sortIcons = <FontAwesomeIcon icon={icon}/>\n    } else {\n        sortIcons = <></>\n    }\n\n    return <>\n        <th onClick={() => props.onClick()} className={className}>\n            <div className=\"w-full flex\">\n                <div className=\"flex-1\">\n                    {props.header}\n                    {sortIcons}\n                </div>\n                {\n                    props.onDelete\n                    ? <div className=\"flex-none\" onClick={e => {\n                        e.stopPropagation();\n                        props.onDelete();\n                    }}>\n                        <FontAwesomeIcon icon=\"times-circle\"/>\n                    </div>\n                    : <></>\n                }\n            </div>\n        </th>\n    </>\n}\n\nexport class SortableTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            sortBy: null,\n            sortDirection: \"asc\",\n            visibleItems: 100\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.setState({visibleItems: 100});\n        }\n    }\n\n    handleHeaderClick = name => {\n        if (this.state.sortBy === name) {\n            this.setState(produce(this.state, draft => {\n                if (draft.sortDirection === \"asc\")\n                    draft.sortDirection = \"desc\";\n                else\n                    draft.sortDirection = \"asc\";\n            }));\n        }\n        else {\n            this.setState(produce(this.state, draft => {\n                draft.sortBy = name;\n                draft.sortDirection = \"asc\";\n            }));\n        }\n    }\n\n    getComparator = (columnName) => {\n        for (var obj of this.props.header) {\n            if (obj.name === columnName)\n                return obj.comparator;\n        }\n    }\n\n    getPropAsString = propName => {\n        if (this.props[propName])\n            return this.props.[propName];\n        return \"\";\n    }\n\n    rowClassName = () => { return this.getPropAsString(\"rowClassName\"); }\n\n    evenRowClassName = () => { return this.getPropAsString(\"evenRowClassName\"); }\n\n    oddRowClassName = () => { return this.getPropAsString(\"oddRowClassName\"); }\n\n    showMore = () => {\n        this.setState(produce(this.state, draft => {\n            if (this.state.visibleItems < this.props.data.length)\n                draft.visibleItems += 50;\n        }));\n    }\n\n    render() {\n        var t0 = performance.now()\n        var sortedData = [...this.props.data];\n        if (this.state.sortBy) {\n            let pureComparator = this.getComparator(this.state.sortBy);\n            let comparator;\n            if (this.state.sortDirection === \"desc\")\n                comparator = (a, b) => - pureComparator(a, b);\n            else\n                comparator = pureComparator;\n\n            sortedData.sort(comparator);\n        }\n        var t1 = performance.now()\n        console.log(\"Sorting took \" + (t1 - t0) + \" milliseconds.\")\n        sortedData = sortedData.slice(0, this.state.visibleItems);\n        return <>\n            <table className={this.props.className}>\n                <thead className=\"bg-white\">\n                    <tr>{\n                        this.props.header.map( x => {\n                            let sortDirection = null;\n                            if (this.state.sortBy === x.name)\n                                sortDirection = this.state.sortDirection;\n                            return <SortableHeaderField\n                                        key={x.name}\n                                        header={x.name}\n                                        sortable={x.sortable}\n                                        onClick={() => this.handleHeaderClick(x.name)}\n                                        sortDirection={sortDirection}\n                                        onDelete={x.onDelete}/>;\n                        })\n                    }</tr>\n                </thead>\n                <tbody>{\n                    sortedData.map((row, index) => {\n                        let className = this.rowClassName();\n                        if ( index % 2 === 0 )\n                            className += \" \" + this.evenRowClassName();\n                        else\n                            className += \" \" + this.oddRowClassName();\n                        return <ExpandableTableRow className={className}\n                                                  key={this.props.keyFun(row)}\n                                                  expandableContent={this.props.expandableContent(row)}>\n                                {\n                                    this.props.header.map(cell => {\n                                        return <td key={cell.name} className={cell.className}>\n                                            { cell.displayGetter(row) }\n                                        </td>\n                                    })\n                                }\n                            </ExpandableTableRow>\n                    })\n                }</tbody>\n            </table>\n            {\n                this.state.visibleItems < this.props.data.length\n                ? <p className=\"w-full text-center m-4\">Loading more components...</p>\n                : <></>\n            }\n            <Waypoint key=\"tableEnd\" onEnter={this.showMore}/>\n        </>\n    }\n}\n\nclass ExpandableTableRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: false\n        }\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.setState(produce(this.state, draft => {\n            draft.expanded = !draft.expanded;\n        }));\n    }\n\n    render() {\n        let expandableContent = <></>\n        let className = this.props.className ? this.props.className : \"\";\n        if (this.state.expanded && this.props.expandableContent) {\n            expandableContent = <tr>\n                    <td colSpan={this.props.children.length}>\n                        {this.props.expandableContent}\n                    </td>\n                </tr>;\n        }\n        if (this.props.expandableContent)\n            className += \" cursor-pointer\";\n        return <>\n            <tr className={className} onClick={this.handleClick}>\n                {this.props.children}\n            </tr>\n            {expandableContent}\n        </>\n    }\n}","\n// Return comparator for given quantity\nexport function quantityComparator(quantityName) {\n    const numericQuantities = [\n        \"resistance\", \"voltage\", \"current\", \"power\", \"count\", \"capacitance\",\n        \"length\", \"inductance\"\n    ];\n    if (numericQuantities.includes(quantityName))\n        return numericComparator;\n    return (a, b) => String(a).localeCompare(String(b));\n}\n\n// Return formatter for given quantity\nexport function quantityFormatter(quantityName) {\n    const formatters = {\n        resistance: resistanceFormatter,\n        voltage: siFormatter(\"V\"),\n        current: siFormatter(\"A\"),\n        power: siFormatter(\"W\"),\n        capacitance: siFormatter(\"F\"),\n        frequency: siFormatter(\"Hz\"),\n        length: siFormatter(\"m\"),\n        inductance: siFormatter(\"H\"),\n        count: x => String(x)\n    };\n\n    let formatter = formatters[quantityName];\n    if (formatter)\n        return formatter\n    return x => String(x);\n}\n\nfunction numericComparator(a, b) {\n    if (a === \"NaN\")\n        a = undefined;\n    if (b === \"NaN\")\n        b = undefined;\n    if (a === undefined && b === undefined)\n        return 0;\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n\n    return a - b;\n}\n\n// Format values like 1u6, 1k6, 1M9\nfunction infixMagnitudeFormatter(value, letter, order) {\n    value = value / order;\n    let integralPart = Math.floor(value);\n    let fractionalPart = (value - integralPart) * 1000; // Number of significant digits\n    let fractionalPartStr = fractionalPart.toFixed().replace(/0*$/,'');\n\n    return String(integralPart) + letter + fractionalPartStr;\n}\n\nfunction siFormatterImpl(value, unit) {\n    if (value === \"NaN\")\n        return \"-\";\n    if (value === 0)\n        return \"0 \" + unit;\n    let prefixes = [\n        { magnitude: 1e-12, prefix: \"p\" },\n        { magnitude: 1e-9, prefix: \"n\" },\n        { magnitude: 1e-6, prefix: \"μ\" },\n        { magnitude: 1e-3, prefix: \"m\" },\n        { magnitude: 1, prefix: \"\" },\n        { magnitude: 1e3, prefix: \"k\" },\n        { magnitude: 1e6, prefix: \"M\" },\n        { magnitude: 1e9, prefix: \"G\" }\n    ];\n    // Choose prefix to use\n    let prefix;\n    for (var idx = 0; idx < prefixes.length; idx++) {\n        if (idx === prefixes.length - 1 || Math.abs(value) < prefixes[idx + 1].magnitude) {\n            prefix = prefixes[idx];\n            break;\n        }\n    }\n\n    return (value / prefix.magnitude)\n                .toFixed(6)\n                .replace(/0*$/,'')\n                .replace(/[.,]$/,'') + \" \" + prefix.prefix + unit;\n}\n\nfunction siFormatter(unit) {\n    return value => siFormatterImpl(value, unit);\n}\n\nfunction resistanceFormatter(resistance) {\n    if (resistance === \"NaN\")\n        return \"-\"\n    if (resistance === 0)\n        return \"0R\";\n    if (resistance < 1) {\n        return (resistance * 1000).toFixed(6).replace(/0*$/,'').replace(/[.,]$/,'') + \"mR\";\n    }\n    if (resistance < 1e3) {\n        // Format with R, e.g., 1R 5R6\n        return infixMagnitudeFormatter(resistance, \"R\", 1);\n    }\n    if (resistance < 1e6) {\n        // Format with k, e.g, 3k3 56k\n        return infixMagnitudeFormatter(resistance, \"k\", 1e3);\n    }\n    if (resistance < 1e9) {\n        // Format with M, e.g., 1M, 5M6\n        return infixMagnitudeFormatter(resistance, \"M\", 1e6);\n    }\n    // Format with G\n    return infixMagnitudeFormatter(resistance, \"G\", 1e9);\n}\n","import React from \"react\";\n\nexport function getQuantityPrice(quantity, pricelist) {\n    for (let pricepoint of pricelist) {\n        if (quantity >= pricepoint.qFrom && (quantity <= pricepoint.qTo || !pricepoint.qTo))\n            return pricepoint.price;\n    }\n    if (pricelist[0])\n        return pricelist[0].price;\n    return undefined;\n}\n\nexport class AttritionInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.state = {}\n    }\n\n    componentDidMount() {\n        fetch(\"https://cors-anywhere.herokuapp.com/https://jlcpcb.com/shoppingCart/smtGood/getComponentDetail?componentCode=\" + this.props.component.lcsc)\n                .then(response => {\n                    if (!response.ok) {\n                        console.log(`Cannot fetch ${this.props.lcsc}: ${response.statusText}`);\n                        return;\n                    }\n                    return response.json();\n                })\n                .then(responseJson => {\n                    this.setState({data: responseJson.data});\n                });\n    }\n\n    price() {\n        let q = Math.max(parseInt(this.props.quantity) + parseInt(this.state.data.lossNumber),\n            this.state.data.leastNumber);\n        return q * getQuantityPrice(q, this.props.component.price);\n    }\n\n    render() {\n        let data = this.state.data;\n        if (data)\n            return <table className=\"w-full\">\n                { data.lossNumber\n                    ? <tr>\n                        <td className=\"w-1 whitespace-no-wrap\">Attrition:</td>\n                        <td className=\"px-2\">{data.lossNumber} pcs</td>\n                      </tr>\n                    : \"\"\n                }\n                { data.leastNumber\n                    ? <tr>\n                        <td className=\"w-1 whitespace-no-wrap\">Minimal order quantity:</td>\n                        <td className=\"px-2\">{data.leastNumber} pcs</td>\n                      </tr>\n                    : \"\"\n                }\n                <tr>\n                    <td className=\"w-1 whitespace-no-wrap\">Price for {this.props.quantity} pcs:</td>\n                    <td className=\"px-2\">{Math.round((this.price() + Number.EPSILON) * 1000) / 1000} USD</td>\n                </tr>\n            </table>\n        return \"\";\n    }\n}","import { db } from \"./db\";\nimport React from \"react\";\nimport { produce, enableMapSet } from \"immer\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Link } from 'react-scroll';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { SortableTable } from \"./sortableTable\"\nimport { quantityComparator, quantityFormatter } from \"./units\";\nimport { AttritionInfo, getQuantityPrice } from \"./jlc\"\n\nenableMapSet();\n\nfunction getValue(value) {\n    if (value === undefined)\n        return undefined;\n    return value[0];\n}\n\nfunction getQuantity(value) {\n    if (value === undefined)\n        return undefined;\n    return value[1];\n}\n\n// Compare two attributes based on given valueType. If no valueType is\n// specified, use primary attribute of x\nfunction attributeComparator(x, y, valueType = undefined) {\n    if (x === undefined && y === undefined)\n        return 0;\n    if (x === undefined)\n        return 1;\n    if (y === undefined)\n        return -1;\n    if (valueType === undefined)\n        valueType = x.primary;\n    let comparator = quantityComparator(getQuantity(x.values[valueType]));\n    return comparator(\n        getValue(x.values[valueType]),\n        getValue(y.values[valueType]));\n}\n\nfunction parseImageSize(imageSizeStr) {\n    let sizes = imageSizeStr.split(\"x\");\n    return sizes.map(x => parseInt(x));\n}\n\nexport function sortImagesSrcBySize(images) {\n    let imgCollection = [];\n    for (var sizeStr in images) {\n        if (sizeStr === \"sort\")\n            continue;\n        let imageDimension = parseImageSize(sizeStr);\n        let size = imageDimension[0] * imageDimension[1];\n        imgCollection.push([size, images[sizeStr]])\n    }\n    imgCollection.sort((a, b) => {\n        return b - a;\n    });\n    return imgCollection;\n}\n\nfunction fullTextComponentsFilter(component, words) {\n    let text = componentText(component);\n    for (let word of words) {\n        if (!text.includes(word))\n            return false;\n    }\n    return true;\n}\n\nfunction componentText(component) {\n    return(\n        component.lcsc + \" \" +\n        component.mfr + \" \" +\n        component.description\n    ).toLocaleLowerCase();\n}\n\nexport function formatAttribute(attribute) {\n    let varNames = Object.keys(attribute.values).map(x => \"\\\\${\" + x + \"}\");\n\n    let regex = new RegExp('(' + varNames.join('|') + ')', 'g');\n    return attribute.format.replace(regex, match => {\n        let name = match.slice(2, -1);\n        let value = attribute.values[name];\n        return quantityFormatter(value[1])(value[0]);\n    });\n}\n\nfunction valueFootprint(value) {\n    return JSON.stringify(value);\n}\n\n// Filter an array asynchronously without excessively blocking UI\nfunction filterByChunks(array, predicate, chunkSize) {\n    let result = [];\n    let idx = 0;\n    let resolve = null;\n    let fail = null;\n    let aborted = false;\n    let filter = () => {\n        if (aborted) {\n            fail(\"Aborted\");\n            return;\n        }\n        let chunk = chunkSize;\n        while (chunk-- && idx < array.length) {\n            if (predicate(array[idx]))\n                result.push(array[idx]);\n            ++idx;\n        }\n        if (idx < array.length) {\n            setTimeout(filter, 0);\n        } else {\n            resolve(result);\n        }\n    };\n    let promise = new Promise((r, f) => {\n        resolve = r;\n        fail = f;\n        setTimeout(filter, 0);\n    });\n    let abortFunction = () => { aborted = true; }\n    return [promise, abortFunction];\n}\n\nexport function Spinbox() {\n    return <div className=\"w-full text-center\">\n        <svg className=\"animate-spin -ml-1 m-8 h-5 w-5 text-black mx-auto inline-block\"\n             xmlns=\"http://www.w3.org/2000/svg\"\n             fill=\"none\" viewBox=\"0 0 24 24\"\n             style={{\"maxWidth\": \"100px\", \"maxHeight\": \"100px\", \"width\": \"100%\", \"height\": \"100%\"}}>\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n    </div>\n}\n\nexport function InlineSpinbox(props) {\n    return <div className={`inline text-center ${props.className}`}>\n        <svg className=\"animate-spin h-5 w-5 text-black mx-auto inline-block\"\n             xmlns=\"http://www.w3.org/2000/svg\"\n             fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n    </div>\n}\n\n\nexport class ZoomableLazyImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hover: false\n        }\n    }\n\n    assignRef = (element) => {\n        this.container = element;\n    }\n\n    handleMouseEnter = () => {\n        this.setState({\"hover\": true});\n    }\n\n    handleMouseLeave= () => {\n        this.setState({\"hover\": false});\n    }\n\n    render() {\n        return (\n            <div\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}>\n                    <LazyLoadImage\n                        height={this.props.width}\n                        width={this.props.height}\n                        src={this.props.src}/>\n                {\n                    this.state.hover\n                        ? <div className=\"z-40 absolute bg-white border-solid border-gray-600 border-2\">\n                            <LazyLoadImage\n                                height={this.props.zoomWidth}\n                                width={this.props.zoomHeight}\n                                src={this.props.zoomSrc}/>\n                          </div>\n                        : <></>\n                }\n            </div>)\n    }\n}\n\nexport class ComponentOverview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"components\": [],\n            \"categories\": [],\n            \"activeProperties\": {},\n            \"stockRequired\": false,\n            \"requiredProperties\": new Set(),\n            \"expectedComponentsVersion\": 0,\n            \"componentsVersion\": 0,\n            \"tableIncludedProperties\": new Set(),\n            \"quantity\": 1\n        };\n    }\n\n    componentDidMount() {\n        db.categories.toArray().then( categories => {\n            this.setState({\n                \"categories\": this.prepareCategories(categories),\n                \"rawCategories\": categories\n            });\n        })\n    }\n\n    prepareCategories(sourceCategories) {\n        let categories = {};\n        for (const category of sourceCategories) {\n            if (categories[category.category] === undefined) {\n                categories[category.category] = [];\n            }\n            categories[category.category].push({\n                \"value\": category[\"subcategory\"],\n                \"key\": category[\"id\"]\n            });\n        }\n\n        let sortedCategories = [];\n        for (const key in categories) {\n            let subCats = categories[key];\n            subCats.sort((a, b) => {\n                return a[\"value\"].localeCompare(b[\"value\"]);\n            });\n            sortedCategories.push({\n                \"category\": key,\n                \"subcategories\": subCats\n            });\n        }\n        sortedCategories.sort((a, b) => {\n            return a.category.localeCompare(b.category);\n        })\n        return sortedCategories;\n    }\n\n    collectProperties(components) {\n        let properties = {};\n        for (const component of components) {\n            if (!(\"attributes\" in component))\n                continue;\n            let attributes = component[\"attributes\"];\n            for (const property in attributes) {\n                if (!(property in properties)) {\n                    properties[property] = {};\n                }\n                let val = attributes[property];\n                properties[property][valueFootprint(val)] = val;\n            }\n        }\n\n        let propertiesList = [];\n        for (const property in properties) {\n            if (Object.keys(properties[property]).size <= 1)\n                continue;\n            let values = Object.entries(properties[property]).map(x => {\n                return {\"key\": x[0], \"value\": x[1]};\n            });\n            propertiesList.push({\n                \"property\": property,\n                \"values\": values\n            });\n        }\n        propertiesList.sort((a, b) => {\n            return a.property.localeCompare(b.property);\n        });\n        return propertiesList;\n    }\n\n    handleStartComponentsChange = () => {\n        let newVersion = this.state.componentsVersion + 1;\n        this.setState(produce(this.state, draft => {\n            draft[\"expectedComponentsVersion\"] = newVersion;\n        }));\n        return newVersion;\n    }\n\n    handleComponentsChange = (version, components) => {\n        if (version !== this.state.expectedComponentsVersion)\n            return;\n        this.setState(produce(this.state, draft => {\n            draft[\"componentsVersion\"] = version;\n            draft[\"components\"] = components;\n            // Update properties filters\n            var t0 = performance.now();\n            let properties = {};\n            for (const propertyDic of this.collectProperties(components)) {\n                properties[propertyDic[\"property\"]] = propertyDic[\"values\"].map(x => x[\"key\"]);\n            }\n            for (const property of Object.keys(draft.activeProperties)) {\n                if (!(property in properties)) {\n                    delete draft[\"activeProperties\"][property];\n                }\n            }\n            for (const property in properties) {\n                draft[\"activeProperties\"][property] = properties[property];\n            }\n            var t1 = performance.now();\n            console.log(\"Active categories took \", t1 - t0, \"ms\" );\n        }));\n    }\n\n    handleActivePropertiesChange = (property, values) => {\n        this.setState(produce(this.state, draft => {\n            draft[\"activeProperties\"][property] = values;\n        }));\n    }\n\n    handleIncludeInTable = (property, value) => {\n        this.setState(produce(this.state, draft => {\n            if (value)\n                draft[\"tableIncludedProperties\"].add(property);\n            else\n                draft[\"tableIncludedProperties\"].delete(property);\n        }));\n    }\n\n    handlePropertyRequired = (property, value) => {\n        this.setState(produce(this.state, draft => {\n            if (value)\n                draft[\"requiredProperties\"].add(property);\n            else\n                draft[\"requiredProperties\"].delete(property);\n        }));\n    }\n\n    filterComponents(components, activeProperties, requiredProperties) {\n        return components.filter(component => {\n            for (const property in activeProperties) {\n                if (this.state.stockRequired && component.stock < this.state.quantity)\n                    return false;\n                let attributes = component[\"attributes\"];\n                if (!(property in attributes)) {\n                    if (requiredProperties.has(property))\n                        return false;\n                    else\n                        continue\n                }\n                if (!(activeProperties[property].includes(valueFootprint(attributes[property]))))\n                    return false;\n            }\n            return true;\n        });\n    }\n\n    handleQuantityChange = q => {\n        this.setState({quantity: q});\n    }\n\n    handleStockRequired = stockRequired => {\n        this.setState({stockRequired: stockRequired});\n    }\n\n    render() {\n        let filterComponents = <>\n            <CategoryFilter\n                categories={this.state.categories}\n                onChange={this.handleComponentsChange}\n                onAnnounceChange={this.handleStartComponentsChange}/>\n            <PropertySelect\n                properties={this.collectProperties(this.state.components)}\n                values={this.state.activeProperties}\n                onChange={this.handleActivePropertiesChange}\n                onTableInclude={this.handleIncludeInTable}\n                tableIncluded={Array.from(this.state.tableIncludedProperties)}\n                requiredProperties={Array.from(this.state.requiredProperties)}\n                onPropertyRequired={this.handlePropertyRequired}\n                />\n            <QuantitySelect\n                onChange={this.handleQuantityChange}\n                value={this.state.quantity}\n                stockRequired={this.state.stockRequired}\n                onStockRequired={this.handleStockRequired}/>\n            </>;\n\n        if (this.state.expectedComponentsVersion !== this.state.componentsVersion) {\n            return <>\n                    {filterComponents}\n                    <Spinbox/>\n                </>;\n        }\n\n        let header = [\n            {\n                name: \"MFR (click for datasheet)\",\n                sortable: true,\n                displayGetter: x => <>\n                    <CopyToClipboard text={x.mfr}>\n                        <button className=\"py-2 px-4 pl-1\" onClick={e => e.stopPropagation()}>\n                            <FontAwesomeIcon icon=\"clipboard\"/>\n                        </button>\n                    </CopyToClipboard>\n                    <a\n                        href={x.datasheet}\n                        onClick={e => e.stopPropagation()}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon=\"file-pdf\"/> {x.mfr}\n                    </a>\n                </>,\n                comparator: (a, b) => a.mfr.localeCompare(b.mfr),\n                className: \"px-1 whitespace-no-wrap\"\n            },\n            {\n                name: \"LCSC\",\n                sortable: true,\n                className: \"px-1 whitespace-no-wrap text-center\",\n                displayGetter: x => {\n                    let discontinued = <></>;\n                    if (x.attributes[\"Status\"]) {\n                        let flag = formatAttribute(x.attributes[\"Status\"]);\n                        if (flag === \"Discontinued\") {\n                            discontinued = <FontAwesomeIcon icon=\"exclamation-triangle\"\n                                color=\"red\" className=\"mx-2\"\n                                title=\"Warning, this component have been discontinued\"/>;\n                        }\n                    }\n                    return <>\n                        {discontinued}\n                        <CopyToClipboard text={x.lcsc}>\n                            <button className=\"py-2 px-4 pl-1\" onClick={e => e.stopPropagation()}>\n                                <FontAwesomeIcon icon=\"clipboard\"/>\n                            </button>\n                        </CopyToClipboard>\n                        <a href={x.url}\n                            className=\"underline text-blue-600\"\n                            onClick={e => e.stopPropagation()}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\">\n                                {x.lcsc}\n                        </a>\n                    </>\n                },\n                comparator: (a, b) => a.lcsc.localeCompare(b.lcsc)\n            },\n            {\n                name: \"Basic/Extended\",\n                sortable: true,\n                displayGetter: x => formatAttribute(x.attributes[\"Basic/Extended\"])[0],\n                comparator: (a, b) => formatAttribute(a.attributes[\"Basic/Extended\"]).localeCompare(formatAttribute(b.attributes[\"Basic/Extended\"])),\n                className: \"text-center\"\n            },\n            {\n                name: \"Image\",\n                sortable: false,\n                displayGetter: x => {\n                    var imgSrc = \"./brokenimage.svg\";\n                    var zoomImgSrc = \"./brokenimage.svg\";\n                    if (x.images && Object.keys(x.images).length > 0) {\n                        let sources = sortImagesSrcBySize(x.images);\n                        imgSrc = sources[0][1];\n                        zoomImgSrc = sources[2][1];\n                    }\n                    return <ZoomableLazyImage\n                        height={90}\n                        width={90}\n                        src={imgSrc}\n                        zoomWidth={350}\n                        zoomHeight={350}\n                        zoomSrc={zoomImgSrc}/>\n                }\n            },\n            {\n                name: \"Description\",\n                sortable: true,\n                displayGetter: x => x.description,\n                comparator: (a, b) => a.description.localeCompare(b.description)\n            },\n            {\n                name: \"Manufacturer\",\n                sortable: true,\n                displayGetter: x => x.manufacturer,\n                comparator: (a, b) => a.manufacturer.localeCompare(b.manufacturer)\n            },\n            {\n                name: \"Stock\",\n                sortable: true,\n                displayGetter: x => x.stock,\n                comparator: (a, b) => a.stock - b.stock\n            },\n            {\n                name: \"Price\",\n                sortable: true,\n                displayGetter: x => {\n                    let price = getQuantityPrice(this.state.quantity, x.price)\n                    let unitPrice = Math.round((price + Number.EPSILON) * 1000) / 1000;\n                    let sumPrice = Math.round((price * this.state.quantity + Number.EPSILON) * 1000) / 1000;\n                    return <>\n                        {`${unitPrice}$/unit`}\n                        <br/>\n                        {`${sumPrice}$/${this.state.quantity} units`}\n                    </>\n                },\n                comparator: (a, b) => {\n                    let aPrice = getQuantityPrice(this.state.quantity, a.price);\n                    let bPrice = getQuantityPrice(this.state.quantity, b.price);\n                    return aPrice - bPrice\n                }\n            },\n        ];\n        for (let attribute of this.state.tableIncludedProperties) {\n            let getter = x => {\n                if (attribute in x.attributes)\n                    return formatAttribute(x.attributes[attribute]);\n                return \"\";\n            }\n\n            let comparator = (x, y) => {\n                let val1 = x.attributes[attribute];\n                let val2 = y.attributes[attribute];\n                return attributeComparator(val1, val2);\n            }\n\n            header.push( {\n                name: attribute,\n                sortable: true,\n                displayGetter: getter,\n                comparator: comparator,\n                onDelete: () => this.handleIncludeInTable(attribute, false),\n                className: \"text-center\"\n            });\n        }\n\n        var t0 = performance.now()\n        let filteredComponents = this.filterComponents(this.state.components,\n            this.state.activeProperties, this.state.requiredProperties);\n        var t1 = performance.now()\n        console.log(\"Filtering took \", t1 - t0, \" ms\");\n\n        return <>\n            {filterComponents}\n            <div className=\"w-full flex p-2\">\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:mr-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"property-select\" spy={true} smooth={true} duration={100} >\n                    ↑ <span className=\"text-bold text-green-500\">■</span> Scroll to properties <span className=\"text-bold text-green-500\">■</span> ↑\n                </Link>\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:ml-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"category-select\" spy={true} smooth={true} duration={100} >\n                    ↑ <span className=\"text-bold text-red-500\">■</span> Scroll to search bar <span className=\"text-bold text-red-500\">■</span> ↑\n                </Link>\n            </div>\n            {filteredComponents.length\n                ?  <div className=\"pt-4\" id=\"results\">\n                        <div className=\"w-full flex py-2\">\n                            <p className=\"flex-none p-2\">Components matching query: {filteredComponents.length}</p>\n                            <CopyToClipboard text={filteredComponents.map(c => `wget ${c.datasheet}`).join(\"\\n\")}>\n                                <button className=\"flex-none ml-auto block flex-none bg-blue-500 hover:bg-blue-700 text-black py-1 px-2 rounded\" onClick={e => e.stopPropagation()}>\n                                    wget all datasheets <FontAwesomeIcon icon=\"clipboard\"/>\n                                </button>\n                            </CopyToClipboard>\n                        </div>\n                        <SortableTable\n                            className=\"w-full\"\n                            headerClassName=\"bg-blue-500\"\n                            header={header}\n                            data={filteredComponents}\n                            evenRowClassName=\"bg-gray-100\"\n                            oddRowClassName=\"bg-gray-300\"\n                            keyFun={item => item.lcsc}\n                            expandableContent={c =>\n                                <ExpandedComponent\n                                    component={c}\n                                    categories={this.state.rawCategories}\n                                    componentQuantity={this.state.quantity}/>}/>\n                    </div>\n                :   <div className=\"p-8 text-center text-lg\" id=\"results\">\n                        No components match the selected criteria.\n                    </div>\n            }\n\n        </>\n    }\n}\n\nexport function findCategoryById(categories, id) {\n    for (let category of categories) {\n        if (category.id === id )\n            return category;\n    }\n    return {\n        category: \"unknown\",\n        subcategory: \"unknown\"\n    }\n}\n\nfunction ExpandedComponent(props) {\n    let comp = props.component;\n    var imgSrc = \"./brokenimage.svg\";\n    if (comp.images && Object.keys(comp.images).length > 0) {\n        let sources = sortImagesSrcBySize(comp.images);\n        imgSrc = sources[sources.length - 1][1];\n    }\n    let category = findCategoryById(props.categories, comp.category)\n    return <div className=\"w-full flex flex-wrap pl-6\">\n        <div className=\"w-full md:w-1/5 p-3\">\n            <img\n                src={imgSrc}\n                alt={`Component ${comp.lcsc}`}\n                className=\"w-full mx-auto\"\n                style={{\n                    maxWidth: \"250px\"\n                }}/>\n        </div>\n        <div className=\"w-full md:w-2/5 p-3\">\n            <table className=\"w-full\">\n                <thead className=\"border-b-2 font-bold\">\n                    <tr>\n                        <td>Property</td>\n                        <td>Value</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr key=\"category\">\n                        <td>Category</td>\n                        <td>{category.category}: {category.subcategory}</td>\n                    </tr>\n                    {\n                        Object.keys(comp.attributes).reduce( (result, pName) => {\n                                result.push(\n                                    <tr key={pName}>\n                                        <td>{pName}</td>\n                                        <td>{formatAttribute(comp.attributes[pName])}</td>\n                                    </tr>);\n                                return result;\n                        }, [])\n                    }\n                </tbody>\n            </table>\n        </div>\n        <div className=\"w-full md:w-2/5 p-3\">\n            <table className=\"w-full border-b-2\">\n                <thead className=\"border-b-2 font-bold\">\n                    <tr>\n                        <td>Quantity</td>\n                        <td>Unit Price</td>\n                    </tr>\n                </thead>\n                <tbody>{\n                   comp.price.map( (pricePoint, idx) => {\n                        return <tr key={idx}>\n                                <td>{\n                                    pricePoint.qTo\n                                    ?   `${pricePoint.qFrom}-${pricePoint.qTo}`\n                                    :   `${pricePoint.qFrom}+`\n                                }</td>\n                                <td>{pricePoint.price} USD</td>\n                               </tr>;\n                   })\n                }</tbody>\n            </table>\n            <AttritionInfo component={comp} quantity={props.componentQuantity} />\n        </div>\n    </div>\n}\n\n// Takes a dictionary of categories and subcategories and lets the user to\n// choose several of them. Returns a list of components fulfilling the\n// selection via onChange.\nclass CategoryFilter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: {},\n            allCategories: false,\n            searchString: \"\",\n            abort: () => {}\n        }\n    }\n\n    collectActiveCategories = () => {\n        let categories = [];\n        for (const key in this.state.categories) {\n            categories = categories.concat(this.state.categories[key]);\n        }\n        return categories;\n    }\n\n    notifyParent = () => {\n        var t0 = performance.now();\n        let version = this.props.onAnnounceChange();\n        this.components().then(components => {\n            var t1 = performance.now();\n            console.log(\"Select took\", t1 - t0, \"ms\");\n            this.props.onChange(version, components);\n        });\n    }\n\n    // Return query containing components based on current categories and\n    // full-text search\n    async components() {\n        this.state.abort();\n        let query;\n        if (this.state.allCategories)\n            query = db.components;\n        else\n            query = db.components.where(\"category\").anyOf(this.collectActiveCategories());\n        // In theory, we should be able to cancel transactions, however, it seems not to be necessary\n        // Leaving this code here for future reference\n        // let [componentsPromise, cAbort] = cancellableDexieQuery(\"components\", () => query.toArray());\n        // this.setState({\"abort\": cAbort});\n        // let components = await componentsPromise.catch(_ => []);\n        // this.setState({\"abort\": () =>{}});\n        let components = await query.toArray();\n        if (this.state.searchString.length === 0)\n            return components;\n\n        let words = this.state.searchString.split(/\\s+/)\n            .filter(x => x.length > 0)\n            .map(x => x.toLocaleLowerCase());\n        if (words.length === 0)\n            return components;\n        console.log(\"Starting search...\");\n        let t0 = performance.now()\n        let [filteredPromise, fAbort] = await filterByChunks(components,\n            component => fullTextComponentsFilter(component, words), 2000);\n        this.setState({\"abort\": fAbort});\n        let filtered = await filteredPromise.catch(_ => []);\n        this.setState({\"abort\": () =>{}});\n        let t1 = performance.now();\n        console.log(\"Search took\", t1 - t0, \"ms\");\n        return filtered;\n    }\n\n    handleCategoryChange = (category, value) => {\n        console.log(\"Category change\");\n        this.setState(produce(this.state, draft => {\n            draft.categories[category] = value.map(n => { return parseInt(n)});\n            draft.allCategories = false;\n        }), this.notifyParent);\n    }\n\n    selectAll = (state) => {\n        for (let category of this.props.categories) {\n            state.categories[category.category] = category.subcategories.map( x => x.key );\n        }\n        state.allCategories = true;\n    }\n\n    handleSelectAll = () => {\n        this.setState(produce(this.state, this.selectAll), this.notifyParent);\n    }\n\n    handleSelectNone = () => {\n        this.setState(produce(this.state, draft => {\n            for (let key in draft.categories) {\n                draft.categories[key] = [];\n            }\n            draft.allCategories = false;\n        }), this.notifyParent);\n    }\n\n    handleFulltextChange = (e) => {\n        this.setState(produce(this.state, draft => {\n            draft.searchString = e.target.value;\n            if (!draft.allCategories && this.collectActiveCategories().length === 0)\n                this.selectAll(draft);\n        }), () => {\n            clearTimeout(this.searchTimeout);\n            this.searchTimeout = setTimeout(this.notifyParent, 350);\n        });\n    }\n\n    handleClear = (e) => {\n        console.log(\"Here!\");\n        this.setState(produce(this.state, draft => {\n            draft.searchString = \"\";\n        }), () => {\n            console.log(\"Notifying parent\");\n            this.notifyParent();\n        });\n    }\n\n    render() {\n        return <div className=\"w-full p-2 border-b-2 border-gray-600 bg-gray-200\">\n            <div className=\"flex\">\n                <h3 className=\"block flex-1 text-lg mx-2 font-bold\" id=\"category-select\">\n                    <span className=\"text-bold text-red-500\">⛶</span> Select category\n                </h3>\n                <button className=\"block flex-none mx-2 bg-blue-500 hover:bg-blue-700 text-black py-1 px-2 rounded\" onClick={this.handleSelectAll}>\n                    Select all categories\n                </button>\n\n                <button className=\"block flex-none mx-2 bg-blue-500 hover:bg-blue-700 text-black py-1 px-2 rounded\" onClick={this.handleSelectNone}>\n                    Select none\n                </button>\n            </div>\n            <div className=\"w-full flex p-2\">\n                <label className=\"flex-none block py-1 mr-2\">\n                    Contains text:\n                </label>\n                <input type=\"text\"\n                    className=\"block flex-1 bg-white appearance-none border-2 border-gray-500 rounded w-full\n                                py-1 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white\n                                focus:border-blue-500\"\n                    value={this.state.searchString}\n                    onChange={this.handleFulltextChange}/>\n                <button className=\"flex-none block ml-2 bg-blue-500 hover:bg-blue-700 text-black py-1 px-2 rounded\" onClick={this.handleClear}>\n                    Clear search\n                </button>\n            </div>\n            <div className=\"w-full flex p-2\">\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:mr-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"results\" spy={true} smooth={true} duration={100} >\n                    ↓ <span className=\"text-bold text-blue-500\">■</span> Scroll to results <span className=\"text-bold text-blue-500\">■</span> ↓\n                </Link>\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:ml-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"property-select\" spy={true} smooth={true} duration={100} >\n                    ↓ <span className=\"text-bold text-green-500\">■</span> Scroll to properties <span className=\"text-bold text-green-500\">■</span> ↓\n                </Link>\n            </div>\n            <div className=\"flex flex-wrap items-stretch\">\n                {this.props.categories.map(item => {\n                    return <MultiSelectBox\n                        className=\"bg-blue-500\"\n                        key={item[\"category\"]}\n                        name={item[\"category\"]}\n                        options={item[\"subcategories\"]}\n                        value={this.state.categories[item[\"category\"]]}\n                        onChange={value => {\n                            this.handleCategoryChange(item[\"category\"], value); } }/>;\n                })}\n            </div>\n            <div className=\"w-full flex p-2\">\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:mr-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"results\" spy={true} smooth={true} duration={100} >\n                    ↓ <span className=\"text-bold text-blue-500\">■</span> Scroll to results <span className=\"text-bold text-blue-500\">■</span> ↓\n                </Link>\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:ml-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"category-select\" spy={true} smooth={true} duration={100} >\n                    ↑ <span className=\"text-bold text-red-500\">■</span> Scroll to search bar <span className=\"text-bold text-red-500\">■</span> ↑\n                </Link>\n            </div>\n        </div>\n    }\n}\n\nclass MultiSelectBox extends React.Component {\n    handleAllClick = (e) => {\n        e.preventDefault();\n        let values = this.props.options.map(option => {\n            return option[\"key\"]\n        });\n        this.props.onChange(values);\n    }\n\n    handleNoneClick = (e) => {\n        e.preventDefault();\n        this.props.onChange([]);\n    }\n\n    handleSelectChange = (e) => {\n        e.preventDefault();\n        let value = Array.from(e.target.selectedOptions, option => option.value);\n        this.props.onChange(value);\n    }\n\n    render() {\n        let selectStyle = {};\n        if (this.props.minHeight)\n            selectStyle.minHeight = this.props.minHeight;\n        return <>\n            <div className={`rounded flex flex-col flex-1 p-1 m-1 ${this.props.className}`}  style={{\"minWidth\": \"200px\", \"maxWidth\": \"400px\"}}>\n                <div className=\"flex-none flex w-full\">\n                    <h5 className=\"block flex-1 font-bold cursor-default rounded px-1 truncate hover:whitespace-normal\">{this.props.name}</h5>\n                    <div className=\"flex-none\">\n                        <button onClick={this.handleAllClick} className=\"mx-2\">All</button>\n                        <button onClick={this.handleNoneClick} className=\"mx-2\">None</button>\n                    </div>\n                </div>\n                <select multiple=\"multiple\" className=\"flex-1 w-full my-2 p-1\"\n                        style={selectStyle}\n                        value={this.props.value} onChange={this.handleSelectChange}>\n                    {this.props.options.map(option => {\n                        return <option value={option[\"key\"]} key={option[\"key\"]} title={option[\"value\"]}>\n                                    {option[\"value\"]}\n                            </option>;\n                    })}\n                </select>\n                <div className=\"flex-none\">\n                    {this.props.children}\n                </div>\n            </div>\n        </>;\n    }\n}\n\nclass SingleSelectBox extends React.Component {\n    render() {\n        return <select className={this.props.className} onChange={this.props.onChange}>\n            {this.props.options.map(option => {\n                return <option value={option[\"key\"]} key={option[\"key\"]}>\n                            {option[\"value\"]}\n                    </option>;\n            })}\n        </select>\n    }\n}\n\nclass PropertySelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: this.collectValueTypes()[0].value\n        };\n    }\n\n    collectValueTypes() {\n        return [...new Set(this.props.item.values.flatMap(x => {\n            return Object.keys(x.value.values);\n        }))].map(x => {\n            return {\n                key: x,\n                value: x\n            }\n        });\n    }\n\n    valueOptions() {\n        let options = [...this.props.item.values];\n        options.sort((a, b) => {\n            return attributeComparator(a.value, b.value, this.state.sortBy);\n        })\n        return options.map(x => { return {\n            key: x.key,\n            value: formatAttribute(x.value)\n        }; } );\n    }\n\n    handleSortChange = e => {\n        this.setState({sortBy: e.target.value});\n    }\n\n    render() {\n        let options = this.valueOptions();\n        if (options.length <= 1)\n            return <></>\n        return <MultiSelectBox\n            className={this.props.className}\n            minHeight=\"10em\"\n            name={this.props.item.property}\n            options={this.valueOptions()}\n            value={this.props.value}\n            onChange={value => {\n                this.props.onChange(value); } }\n        >\n            <div className=\"w-full flex\">\n                <div className=\"flex-none\">\n                    Sort by:\n                </div>\n                <div className=\"flex-1 ml-2\">\n                    <SingleSelectBox\n                        className=\"w-full rounded bg-white\"\n                        value={this.state.sortBy}\n                        options={this.collectValueTypes()}\n                        onChange={this.handleSortChange}/>\n                </div>\n            </div>\n            <div className=\"w-full\">\n                <input\n                    className=\"mr-2 leading-tight\"\n                    type=\"checkbox\"\n                    checked={this.props.tableIncluded}\n                    onChange={e => {\n                        this.props.onTableInclude(e.target.checked); } } />\n                Table column\n            </div>\n            <div className=\"w-full\">\n                <input\n                    className=\"mr-2 leading-tight\"\n                    type=\"checkbox\"\n                    checked={this.props.required}\n                    onChange={e => {\n                        this.props.onPropertyRequired(e.target.checked); } } />\n                Required\n            </div>\n        </MultiSelectBox>;\n    }\n}\n\nclass PropertySelect extends React.Component {\n    render() {\n        return <div className=\"w-full p-2 border-b-2 border-gray-600 bg-gray-200\">\n            <h3 className=\"block w-full text-lg mx-2 font-bold\" id=\"property-select\">\n                <span className=\"text-bold text-green-500\">⛶</span> Property filter\n            </h3>\n            <div className=\"flex flex-wrap items-stretch\">\n                { this.props.properties.length === 0\n                ? <p className=\"mx-2\">\n                    There are no properties to select from. Select category or adjust the full-text search to include some components.\n                 </p>\n                : this.props.properties.map(item => {\n                    return <PropertySelector\n                        key={item[\"property\"]}\n                        className=\"bg-blue-500\"\n                        item={item}\n                        value={this.props.values[item.property]}\n                        onChange={value => this.props.onChange(item.property, value)}\n                        tableIncluded={this.props.tableIncluded.includes(item.property)}\n                        onTableInclude={value => this.props.onTableInclude(item.property, value)}\n                        required={this.props.requiredProperties.includes(item.property)}\n                        onPropertyRequired={value => this.props.onPropertyRequired(item.property, value) }\n                    />;\n                })}\n            </div>\n            <div className=\"w-full flex p-2\">\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:mr-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"results\" spy={true} smooth={true} duration={100} >\n                    ↓ <span className=\"text-bold text-blue-500\">■</span> Scroll to results <span className=\"text-bold text-blue-500\">■</span> ↓\n                </Link>\n                <Link activeClass=\"active\"\n                    className=\"w-full md:w-1/2 block md:ml-2 bg-gray-500 hover:bg-gray-700 text-black py-1 px-2 rounded text-center\"\n                    to=\"category-select\" spy={true} smooth={true} duration={100} >\n                    ↑ <span className=\"text-bold text-red-500\">■</span> Scroll to search bar <span className=\"text-bold text-red-500\">■</span> ↑\n                </Link>\n            </div>\n        </div>\n    }\n}\n\nclass QuantitySelect extends React.Component {\n    render() {\n        return <div className=\"w-full p-2 border-b-2 border-gray-600 bg-gray-200\">\n            <div className=\"flex\">\n                <div className=\"flex-none py-2 mr-2\">\n                    Specify quantity (for price point selection)\n                </div>\n                <input\n                    className=\"block flex-1 bg-white appearance-none border-2 border-gray-500 rounded w-full\n                        py-1 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white\n                        focus:border-blue-500\"\n                    type=\"number\"\n                    min={1}\n                    onChange={e => this.props.onChange(e.target.value)}\n                    value={this.props.value}\n                    />\n                <div className=\"flex-none flex items-center\">\n                    <input\n                        className=\"px-2 ml-3 transform scale-150\"\n                        type=\"checkbox\"\n                        checked={this.props.stockRequired}\n                        onChange={e => {\n                            this.props.onStockRequired(e.target.checked)\n                        }}/>\n                    <span className=\"ml-1 py-2 pl-2 leading-none\">\n                        Require on stock <br/>\n                        <span className=\"text-gray-600 text-xs\">\n                            (Stock data can be 24 hours old)\n                        </span>\n                    </span>\n                </div>\n            </div>\n        </div>\n    }\n}\n","import React from 'react';\nimport { fetchJson, db } from './db'\nimport { Spinbox, InlineSpinbox,\n         ZoomableLazyImage, sortImagesSrcBySize,\n         formatAttribute, findCategoryById } from './componentTable'\nimport { getQuantityPrice } from './jlc'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport function History(props) {\n    return <div className=\"bg-gray-200 p-2\">\n        <HistoryTable/>\n    </div>\n}\n\nclass HistoryItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        db.components.get({\"lcsc\": this.props.lcsc}).then( component => {\n            this.setState({\"info\": component});\n        });\n    }\n\n    renderImage() {\n        var imgSrc = \"./brokenimage.svg\";\n        var zoomImgSrc = \"./brokenimage.svg\";\n        let x = this.state.info;\n        if (x.images && Object.keys(x.images).length > 0) {\n            let sources = sortImagesSrcBySize(x.images);\n            imgSrc = sources[0][1];\n            zoomImgSrc = sources[2][1];\n        }\n        return <ZoomableLazyImage\n            height={90}\n            width={90}\n            src={imgSrc}\n            zoomWidth={350}\n            zoomHeight={350}\n            zoomSrc={zoomImgSrc}/>\n    }\n\n    renderLoaded() {\n        let x = this.state.info;\n        console.log(x)\n        let price = getQuantityPrice(1, x.price)\n        let unitPrice = Math.round((price + Number.EPSILON) * 1000) / 1000;\n        let category = findCategoryById(this.props.categories, x.category);\n        return <tr>\n            <td className=\"text-center\">\n                <a href={x.url}\n                    className=\"underline text-blue-600\"\n                    onClick={e => e.stopPropagation()}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                        {x.lcsc}\n                </a>\n            </td>\n            <td className=\"text-center\">\n                <a\n                    href={x.datasheet}\n                    onClick={e => e.stopPropagation()}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                        <FontAwesomeIcon icon=\"file-pdf\"/> {x.mfr}\n                </a>\n            </td>\n            <td className=\"text-center\">\n                {formatAttribute(x.attributes[\"Basic/Extended\"])[0]}\n            </td>\n            <td className=\"text-center\">\n                {this.renderImage()}\n            </td>\n            <td className=\"text-left\">\n                {x.description}\n            </td>\n            <td className=\"text-left\">\n                {category.category}: {category.subcategory}\n            </td>\n            <td className=\"text-left\">\n                {`${unitPrice}$/unit`}\n            </td>\n        </tr>\n    }\n\n    renderUnknown() {\n        return <tr className=\"text-center\">\n            <td className=\"text-center\">\n                {this.props.lcsc}\n            </td>\n            <td className=\"\" colSpan={6}>\n                Component is missing in database. Do you use the latest database?\n            </td>\n        </tr>\n    }\n\n    render() {\n        if (\"info\" in this.state && this.state[\"info\"] !== undefined)\n            return this.renderLoaded();\n        if (\"info\" in this.state)\n            return this.renderUnknown();\n        return <tr className=\"text-center\">\n            <td className=\"text-center\">\n                {this.props.lcsc}\n            </td>\n            <td className=\"\" colSpan={6}>\n                <InlineSpinbox/>\n            </td>\n        </tr>\n    }\n}\n\nfunction DayTable(props) {\n    return <table className=\"w-full bg-white p-2 my-2\">\n        <thead className=\"bg-white\">\n            <tr>{\n                [\"LCSC\", \"MFR\", \"Basic/Extended\", \"Image\", \"Description\", \"Category\", \"Price\"].map( label => {\n                    return <th key={label} className=\"bg-blue-500 mx-1 p-2 border-r-2 rounded\">\n                        {label}\n                    </th>\n                })\n            }</tr>\n        </thead>\n        <tbody>\n            {\n                props.components.map(\n                    lcsc =>\n                        <HistoryItem\n                        key={lcsc}\n                        lcsc={lcsc}\n                        categories={props.categories}/>)\n            }\n        </tbody>\n    </table>\n}\n\nclass HistoryTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        fetchJson(process.env.PUBLIC_URL + \"/data/changelog.json\")\n            .then(response => {\n                let log = []\n                for (const day in response) {\n                    log.push({\n                        \"day\": new Date(day),\n                        \"components\": response[day]\n                    });\n                }\n                log.sort((a, b) => DataTransfer.compare(b, a));\n                this.setState({\"table\": log})\n            });\n        db.categories.toArray().then( categories => {\n            this.setState({\"categories\": categories})\n        });\n    }\n\n    render() {\n        if (this.state[\"table\"] === undefined) {\n            return <Spinbox/>\n        }\n        return this.state[\"table\"].map(item => {\n            if (item.components.lenght === 0)\n                return <></>\n            let day = item.day\n            return <div key={item.day}>\n                <h2 className=\"w-full text-lg\">\n                    Newly added components on {day.getDate()}. {day.getMonth()}. {day.getFullYear()}:\n                </h2>\n                <DayTable\n                    components={item.components}\n                    categories={this.state.categories}\n                    />\n            </div>\n        });\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nimport './main.css';\nimport { updateComponentLibrary, checkForComponentLibraryUpdate, db } from './db'\nimport { ComponentOverview } from './componentTable'\nimport { History } from './history'\n\nlibrary.add(fas, far, fab);\n\nfunction Header(props) {\n  return <>\n    <div className=\"w-full px-2 py-8 flex\">\n      <img src=\"./favicon.svg\" alt=\"\" className=\"block flex-none mr-4 h-auto\"/>\n      <div className=\"flex-1\">\n        <h1 className=\"text-4xl font-bold\">\n          JLC PCB SMD Assembly Component Catalogue\n        </h1>\n        <p>\n          Parametric search for components offered by <a href=\"https://jlcpcb.com\">JLC PCB</a> SMD assembly service.\n        </p>\n        <p>\n          Read more at project's <a className=\"underline text-blue-500 hover:text-blue-800\" href=\"https://github.com/yaqwsx/jlcparts\">GitHub page</a>.\n        </p>\n      </div>\n    </div>\n    <div className=\"rounded my-3 p-2 border-blue-500 border-2\">\n      Do you enjoy this site? Consider supporting me so I can actively maintain projects like this one!\n      Read more about <a className=\"underline text-blue-500 hover:text-blue-800\" href=\"https://github.com/sponsors/yaqwsx\">my story</a>.\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"pr-2 text-right\">\n              GitHub Sponsors:\n            </td>\n            <td>\n              <iframe src=\"https://github.com/sponsors/yaqwsx/button\" title=\"Sponsor yaqwsx\" height=\"35\" width=\"116\" style={{\"border\": 0}} className=\"inline-block\"></iframe>\n            </td>\n          </tr>\n          <tr>\n            <td className=\"pr-2 text-right\">\n              Ko-Fi:\n            </td>\n            <td>\n              <a href=\"https://ko-fi.com/E1E2181LU\">\n                <img src=\"https://ko-fi.com/img/githubbutton_sm.svg\" alt=\"Ko-Fi button\" className=\"inline-block\"/>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </>\n}\n\nfunction Footer(props) {\n  return <div className=\"w-full p-2 border-t-2 border-gray-800\" style={{\"minHeight\": \"200px\"}}>\n\n  </div>\n}\n\nclass FirstTimeNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"componentCount\": undefined\n    };\n  }\n\n  componentDidMount() {\n    db.components.count().then(x => {\n      this.setState({\"componentCount\": x});\n    })\n  }\n\n  render() {\n    if (this.state.componentCount === undefined || this.state.componentCount !== 0)\n      return <></>\n    return <div className=\"w-full p-8 my-2 bg-yellow-400 rounded\">\n      <p>\n        Hey, it seems that you run the application for the first time, hence,\n        there's no component library in your device. Just press the \"Update\n        the component library button\" in the upper right corner to download it\n        and use the app.\n      </p>\n      <p>\n        Note that the initial download of the component library might take a while.\n      </p>\n    </div>\n  }\n}\n\nclass NewComponentFormatWarning extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newComponentFormat: true\n    };\n  }\n\n  componentDidMount() {\n    db.components.limit(1).first().then(x => {\n      if (typeof x.attributes[Object.keys(x.attributes)[0]] !== 'object')\n        this.setState({newComponentFormat: false});\n    });\n  }\n\n  render() {\n    if (this.state.newComponentFormat)\n      return <></>\n    return <div className=\"w-full p-8 my-2 bg-yellow-400 rounded\">\n      <p>\n        Hey, there have been some breaking changes to the library format.\n        Please, update the library before continuing to use the tool.\n      </p>\n    </div>\n  }\n}\n\nclass UpdateBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"updateAvailable\": this.props.updateAvailable\n    };\n  }\n\n  componentDidMount() {\n    let checkStatus = () => {\n      checkForComponentLibraryUpdate().then( updateAvailable => {\n        this.setState({\"updateAvailable\": updateAvailable});\n      });\n      db.settings.get(\"lastUpdate\").then(x => {\n        this.setState({\"lastUpdate\": x});\n      })\n    };\n\n    checkStatus();\n    this.timerID = setInterval(checkStatus, 60000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  handleUpdateClick = (e) => {\n    e.preventDefault();\n    this.props.onTriggerUpdate();\n  }\n\n  render() {\n    if (this.state.updateAvailable) {\n      return <div className=\"flex flex-wrap w-full align-middle bg-yellow-400 p-2\">\n                <p className=\"inline-block w-full md:w-1/2 py-2\">There is an update of the component library available.</p>\n                <button className=\"inline-block w-full md:w-1/2 bg-green-500 hover:bg-green-600 py-2 px-4 rounded\"\n                        onClick={this.handleUpdateClick}>\n                  Update the component library\n                </button>\n              </div>\n    }\n    else {\n    return <div className=\"w-full bg-green-400 p-2 text-xs\">\n              <p>The component database is up to-date {this.state.lastUpdate ? `(${this.state.lastUpdate})` : \"\"}.</p>\n            </div>\n    }\n  }\n}\n\nclass Updater extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"progress\": {}\n    };\n  }\n\n  componentDidMount() {\n    let t0 = performance.now();\n    updateComponentLibrary(\n      (progress) => { this.setState({\"progress\": progress}); }\n    ).then(() => {\n      let t1 = performance.now();\n      console.log(\"Library update took \", t1 - t0, \"ms\");\n      this.props.onFinish();\n    });\n  }\n\n  listItems() {\n    let items = []\n    for (const [task, status] of Object.entries(this.state.progress)) {\n      let color = status[1] ? \"bg-green-500\" : \"bg-yellow-400\";\n      items.push(<tr key={task}>\n        <td className=\"p-2\">{task}</td>\n        <td className={`p-2 ${color}`}>{status[0]}</td>\n      </tr>)\n    }\n    return items;\n  }\n\n  render() {\n    return <div className=\"w-full px-2 py-8\">\n      <h1 className=\"font-bold text-2xl\">Update progress:</h1>\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"border-b-2 border-gray-800 font-bold\">\n            <td>Operation/category</td>\n            <td>Progress</td>\n          </tr>\n        </thead>\n        <tbody>\n          {this.listItems()}\n        </tbody>\n      </table>\n    </div>\n  }\n}\n\nfunction Container(props) {\n  return <div className=\"container mx-auto px-2\">{props.children}</div>\n}\n\nfunction Navbar(props) {\n  return <div className=\"w-ful text-lg\">\n    <NavLink to=\"/\" exact={true}\n      className=\"inline-block p-4 bg-white\"\n      activeClassName=\"bg-gray-200 font-bold\">\n      Component search\n    </NavLink>\n    <NavLink to=\"/history\"\n      className=\"inline-block p-4 bg-white\"\n      activeClassName=\"bg-gray-200 font-bold\">\n       Catalog history\n    </NavLink>\n  </div>\n}\n\nexport function NoMatch() {\n  return <p>404 not found</p>;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"updating\": false\n    };\n  }\n\n  onUpdateFinish = () => {\n    this.setState({\"updating\": false});\n  }\n\n  triggerUpdate = () => {\n    this.setState({\"updating\": true});\n  }\n\n  render() {\n    if (this.state.updating) {\n      return <Container>\n        <Updater onFinish={this.onUpdateFinish}/>\n      </Container>\n    }\n    return (\n      <Router basename={process.env.PUBLIC_URL} >\n        <Container>\n          <UpdateBar onTriggerUpdate={this.triggerUpdate}/>\n          <Header/>\n          <FirstTimeNote/>\n          <NewComponentFormatWarning/>\n          <Navbar/>\n              <Switch>\n                  <Route exact path=\"/\">\n                    <ComponentOverview/>\n                  </Route>\n                  <Route path=\"/history\" component={History} />\n                  <Route path=\"*\">\n                      <NoMatch />\n                  </Route>\n              </Switch>\n          <Footer/>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}